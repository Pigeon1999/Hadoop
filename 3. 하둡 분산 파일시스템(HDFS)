하둡 분산 파일 시스템(HDFS)
  - 네트워크로 연결된 여러 머신의 스토리지를 관리하는 파일 시스템
  - 네트워크 기반이므로 네트워크 프로그램의 복잡성을 모두 가지고 있다. 

  장점
  - 많은 양의 데이터를 저장할 수 있다. 
  - 스트리밍 방식의 데이터 접근 : 전체 데이터셋을 모두 읽는데 걸리는 시간이 적다. 
  - 노드 장애가 발생할 확률이 높은 범용 하드웨어로 구성된 대형 클러스터에서 문제없이 실행되도록 설계되었다.  

  단점
  - 빠른 응답 시간 X 
  - 너무 많은 파일은 메모리 용량을 초과할 수 있다. --> 한 개의 블록, 파일, 디렉터리당 150바이트 메모리가 필요하다.
  - HDFS는 단일 라이터로 파일을 쓴다. 파일 끝에 덧붙이는 건 가능하지만, 임의 위치를 수정하는 것은 불가능하다. 

블록(청크)  
  - 한 번에 읽고 쓸 수 있는 데이터의 최대량 (HDFS는 기본적으로 128MB) 
  - HDFS는 블록 크기보다 작은 데이터일 경우 전체 블록 크기에 해당하는 하위 디스크를 모두 점유하지 않는다. 
  - HDFS의 블록의 크기가 큰 이유는 탐색 비용을 최소화 하기 위해서이다.
  - 블록은 내고장성, 가용성을 제공하는 데 필요한 복제를 구현할 때 매우 적합하다. (각 블록은 각 머신(보통 3개)에 복제된다.)

네임 노드 & 데이터 노드 
  - HDFS 클러스터는 마스터-워커 패턴으로 동작하는 두 종류의 노드로 구성되어 있다. 
  - 네임노드 : 한 개의 마스터 노드. 파일시스템의 네임스페이스 관리, 메타 데이터(네임스페이스 이미지&에디트 로그) 유지 
  - 데이터 노드 : 여러개의 워커 노드. 클라이언트나 네임노드의 요청이 있을때 블록을 저장, 탐색, 보고 
