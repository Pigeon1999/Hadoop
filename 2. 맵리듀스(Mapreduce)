맵리듀스(Mapreduce) : 일괄 데이터 처리를 위한 프로그래밍 모델. 병행성을 고려하여 설계되었다. 
  - 하둡의 특성상 소수의 큰 파일이 처리하기 쉽고 효율적이다. 

ex) 유닉스 도구로 데이터 분석한 경우 (연도별 최고 기온 계산 프로그램) --> 42분 / 처리가 오래 걸리기 때문에 병렬처리 해야한다. 
  문제점 
  - 일을 동일한 크기로 나눈다는 것이 언제나 쉽고 명확한 것이 아니다. -> 파일 크기가 각각 다르기 때문에 일부 프로세스는 일찍 끝날 가능성이 있다. 
  - 독립적인 프로세스의 결과를 모두 합치는 데 더 많은 처리가 필요할 수 있다. 
  - 단일 머신의 처리 능력은 한계가 있다. 
--> 이러한 이슈를 해결하기 위해 하둡과 같은 프레임워크를 사용하는 것이 큰 도움이 된다. 

하둡으로 데이터 분석하기 
  - 맵리듀스 작업은 크게 '맵 단계(입력)'와 '리듀스 단계(출력)'로 구분된다. 각각은 키-값의 쌍을 가지며, 그 타입은 프로그래머가 선택한다. 
  
  맵 단계
  - 맵 단계의 입력은 원본 데이터이다. 원본 데이터를 프로그래머가 원하는 타입으로 변환한다. 
  - 그러면 키는 '각 행이 시작되는 지점까지의 오프셋'이고, 값은 '각 행의 타입을 변환한 원본 데이터'가 된다. 그리고 각 행은 키-값 쌍으로 변환되어 맵 함수의 입력이 된다.  
  - 맵 함수를 수행하여 원하는 키-값쌍을 추출한다. 그리고 데이터들을 키를 기준으로 정렬되고 그룹화 한다. 
  - 정렬되고 그룹화된 키-값이 리듀스 함수의 입력값이 된다. 

  리듀스 단계 
  - 프로그래머가 작성한 리듀스 함수에 입력 값을 넣어 원하는 값을 출력한다. 

ex) 하둡의 맵리듀스로 데이터 분석한 경우 --> 6분 

